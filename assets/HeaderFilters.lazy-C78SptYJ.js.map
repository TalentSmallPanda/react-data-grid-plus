{"version":3,"file":"HeaderFilters.lazy-C78SptYJ.js","sources":["../../website/routes/HeaderFilters.lazy.tsx"],"sourcesContent":["import { createContext, useContext, useMemo, useState } from 'react';\nimport { faker } from '@faker-js/faker';\nimport { createLazyFileRoute } from '@tanstack/react-router';\nimport { css } from '@linaria/core';\n\nimport DataGrid from '../../src';\nimport type { Column, RenderHeaderCellProps } from '../../src';\nimport type { Omit } from '../../src/types';\nimport { useDirection } from '../directionContext';\n\nexport const Route = createLazyFileRoute('/HeaderFilters')({\n  component: HeaderFilters\n});\n\nconst rootClassname = css`\n  display: flex;\n  flex-direction: column;\n  block-size: 100%;\n  gap: 10px;\n\n  > .rdg {\n    flex: 1;\n  }\n`;\n\nconst toolbarClassname = css`\n  text-align: end;\n`;\n\nconst filterColumnClassName = 'filter-cell';\n\nconst filterContainerClassname = css`\n  .${filterColumnClassName} {\n    line-height: 35px;\n    padding: 0;\n\n    > div {\n      padding-block: 0;\n      padding-inline: 8px;\n\n      &:first-child {\n        border-block-end: 1px solid var(--rdg-border-color);\n      }\n    }\n  }\n`;\n\nconst filterClassname = css`\n  inline-size: 100%;\n  padding: 4px;\n  font-size: 14px;\n`;\n\ninterface Row {\n  id: number;\n  task: string;\n  priority: string;\n  issueType: string;\n  developer: string;\n  complete: number;\n}\n\ninterface Filter extends Omit<Row, 'id' | 'complete'> {\n  complete: number | undefined;\n  enabled: boolean;\n}\n\n// Context is needed to read filter values otherwise columns are\n// re-created when filters are changed and filter loses focus\nconst FilterContext = createContext<Filter | undefined>(undefined);\n\nfunction inputStopPropagation(event: React.KeyboardEvent<HTMLInputElement>) {\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\n    event.stopPropagation();\n  }\n}\n\nfunction selectStopPropagation(event: React.KeyboardEvent<HTMLSelectElement>) {\n  if (['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'].includes(event.key)) {\n    event.stopPropagation();\n  }\n}\n\nfunction HeaderFilters() {\n  const direction = useDirection();\n  const [rows] = useState(createRows);\n  const [filters, setFilters] = useState(\n    (): Filter => ({\n      task: '',\n      priority: 'Critical',\n      issueType: 'All',\n      developer: '',\n      complete: undefined,\n      enabled: true\n    })\n  );\n\n  const developerOptions = useMemo(\n    () =>\n      Array.from(new Set(rows.map((r) => r.developer))).map((d) => ({\n        label: d,\n        value: d\n      })),\n    [rows]\n  );\n\n  const columns = useMemo((): readonly Column<Row>[] => {\n    return [\n      {\n        key: 'id',\n        name: 'ID',\n        width: 50\n      },\n      {\n        key: 'task',\n        name: 'Title',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <input\n                {...rest}\n                className={filterClassname}\n                value={filters.task}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    task: e.target.value\n                  })\n                }\n                onKeyDown={inputStopPropagation}\n              />\n            )}\n          </FilterRenderer>\n        )\n      },\n      {\n        key: 'priority',\n        name: 'Priority',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <select\n                {...rest}\n                className={filterClassname}\n                value={filters.priority}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    priority: e.target.value\n                  })\n                }\n                onKeyDown={selectStopPropagation}\n              >\n                <option value=\"All\">All</option>\n                <option value=\"Critical\">Critical</option>\n                <option value=\"High\">High</option>\n                <option value=\"Medium\">Medium</option>\n                <option value=\"Low\">Low</option>\n              </select>\n            )}\n          </FilterRenderer>\n        )\n      },\n      {\n        key: 'issueType',\n        name: 'Issue Type',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <select\n                {...rest}\n                className={filterClassname}\n                value={filters.issueType}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    issueType: e.target.value\n                  })\n                }\n                onKeyDown={selectStopPropagation}\n              >\n                <option value=\"All\">All</option>\n                <option value=\"Bug\">Bug</option>\n                <option value=\"Improvement\">Improvement</option>\n                <option value=\"Epic\">Epic</option>\n                <option value=\"Story\">Story</option>\n              </select>\n            )}\n          </FilterRenderer>\n        )\n      },\n      {\n        key: 'developer',\n        name: 'Developer',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <input\n                {...rest}\n                className={filterClassname}\n                value={filters.developer}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    developer: e.target.value\n                  })\n                }\n                onKeyDown={inputStopPropagation}\n                list=\"developers\"\n              />\n            )}\n          </FilterRenderer>\n        )\n      },\n      {\n        key: 'complete',\n        name: '% Complete',\n        headerCellClass: filterColumnClassName,\n        renderHeaderCell: (p) => (\n          <FilterRenderer<Row> {...p}>\n            {({ filters, ...rest }) => (\n              <input\n                {...rest}\n                type=\"number\"\n                className={filterClassname}\n                value={filters.complete}\n                onChange={(e) =>\n                  setFilters({\n                    ...filters,\n                    complete: Number.isFinite(e.target.valueAsNumber)\n                      ? e.target.valueAsNumber\n                      : undefined\n                  })\n                }\n                onKeyDown={inputStopPropagation}\n              />\n            )}\n          </FilterRenderer>\n        )\n      }\n    ];\n  }, []);\n\n  const filteredRows = useMemo(() => {\n    return rows.filter((r) => {\n      return (\n        (filters.task ? r.task.includes(filters.task) : true) &&\n        (filters.priority !== 'All' ? r.priority === filters.priority : true) &&\n        (filters.issueType !== 'All' ? r.issueType === filters.issueType : true) &&\n        (filters.developer\n          ? r.developer.toLowerCase().startsWith(filters.developer.toLowerCase())\n          : true) &&\n        (filters.complete !== undefined ? r.complete >= filters.complete : true)\n      );\n    });\n  }, [rows, filters]);\n\n  function clearFilters() {\n    setFilters({\n      task: '',\n      priority: 'All',\n      issueType: 'All',\n      developer: '',\n      complete: undefined,\n      enabled: true\n    });\n  }\n\n  function toggleFilters() {\n    setFilters((filters) => ({\n      ...filters,\n      enabled: !filters.enabled\n    }));\n  }\n\n  return (\n    <div className={rootClassname}>\n      <div className={toolbarClassname}>\n        <button type=\"button\" onClick={toggleFilters}>\n          Toggle Filters\n        </button>{' '}\n        <button type=\"button\" onClick={clearFilters}>\n          Clear Filters\n        </button>\n      </div>\n      <FilterContext.Provider value={filters}>\n        <DataGrid\n          className={filters.enabled ? filterContainerClassname : undefined}\n          columns={columns}\n          rows={filteredRows}\n          headerRowHeight={filters.enabled ? 70 : undefined}\n          direction={direction}\n        />\n      </FilterContext.Provider>\n      <datalist id=\"developers\">\n        {developerOptions.map(({ label, value }) => (\n          <option key={value} value={value}>\n            {label}\n          </option>\n        ))}\n      </datalist>\n    </div>\n  );\n}\n\nfunction FilterRenderer<R>({\n  tabIndex,\n  column,\n  children\n}: RenderHeaderCellProps<R> & {\n  children: (args: { tabIndex: number; filters: Filter }) => React.ReactElement;\n}) {\n  const filters = useContext(FilterContext)!;\n  return (\n    <>\n      <div>{column.name}</div>\n      {filters.enabled && <div>{children({ tabIndex, filters })}</div>}\n    </>\n  );\n}\n\nfunction createRows() {\n  const rows: Row[] = [];\n  for (let i = 1; i < 500; i++) {\n    rows.push({\n      id: i,\n      task: `Task ${i}`,\n      complete: Math.min(100, Math.round(Math.random() * 110)),\n      priority: ['Critical', 'High', 'Medium', 'Low'][Math.floor(Math.random() * 4)],\n      issueType: ['Bug', 'Improvement', 'Epic', 'Story'][Math.floor(Math.random() * 4)],\n      developer: faker.person.fullName()\n    });\n  }\n  return rows;\n}\n"],"names":["Route","createLazyFileRoute","component","HeaderFilters","rootClassname","toolbarClassname","filterColumnClassName","filterContainerClassname","filterClassname","FilterContext","createContext","inputStopPropagation","event","includes","key","stopPropagation","selectStopPropagation","direction","useDirection","rows","useState","createRows","filters","setFilters","task","priority","issueType","developer","complete","enabled","developerOptions","useMemo","Array","from","Set","map","r","d","label","value","columns","name","width","headerCellClass","renderHeaderCell","p","jsx","FilterRenderer","children","rest","className","onChange","e","target","onKeyDown","jsxs","list","type","Number","isFinite","valueAsNumber","filteredRows","filter","toLowerCase","startsWith","clearFilters","toggleFilters","onClick","Provider","DataGrid","headerRowHeight","id","tabIndex","column","useContext","Fragment","i","push","Math","min","round","random","floor","faker","person","fullName"],"mappings":"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"}