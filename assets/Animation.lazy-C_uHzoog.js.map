{"version":3,"file":"Animation.lazy-C_uHzoog.js","sources":["../../website/routes/Animation.lazy.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { createLazyFileRoute } from '@tanstack/react-router';\nimport { css } from '@linaria/core';\n\nimport DataGrid from '../../src';\nimport type { Column } from '../../src';\nimport { useDirection } from '../directionContext';\n\nexport const Route = createLazyFileRoute('/Animation')({\n  component: Animation\n});\n\nconst rangeClassname = css`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 8px;\n`;\n\nconst transitionClassname = css`\n  transition: grid-template-rows 0.5s ease;\n`;\n\ninterface Row {\n  readonly id: number;\n  readonly task: string;\n  readonly complete: number;\n  readonly priority: string;\n  readonly issueType: string;\n}\n\nfunction createRows(): Row[] {\n  const rows: Row[] = [];\n\n  for (let i = 1; i < 500; i++) {\n    rows.push({\n      id: i,\n      task: `Task ${i}`,\n      complete: Math.min(100, Math.round(Math.random() * 110)),\n      priority: ['Critical', 'High', 'Medium', 'Low'][Math.round(Math.random() * 3)],\n      issueType: ['Bug', 'Improvement', 'Epic', 'Story'][Math.round(Math.random() * 3)]\n    });\n  }\n\n  return rows;\n}\n\nconst columns: Column<Row>[] = [\n  {\n    key: 'id',\n    name: 'ID',\n    width: 80\n  },\n  {\n    key: 'task',\n    name: 'Title',\n    resizable: true\n  },\n  {\n    key: 'priority',\n    name: 'Priority',\n    resizable: true\n  },\n  {\n    key: 'issueType',\n    name: 'Issue Type',\n    resizable: true\n  },\n  {\n    key: 'complete',\n    name: '% Complete',\n    resizable: true\n  }\n];\n\nconst rows = createRows();\n\nfunction Animation() {\n  const direction = useDirection();\n  const [rowHeight, setRowHeight] = useState(30);\n\n  return (\n    <>\n      <div className={rangeClassname}>\n        Row Height\n        <button type=\"button\" onClick={() => setRowHeight(30)}>\n          Small\n        </button>\n        <button type=\"button\" onClick={() => setRowHeight(60)}>\n          Medium\n        </button>\n        <button type=\"button\" onClick={() => setRowHeight(90)}>\n          Large\n        </button>\n      </div>\n      <DataGrid\n        className={`${transitionClassname} fill-grid`}\n        columns={columns}\n        rows={rows}\n        direction={direction}\n        rowHeight={rowHeight}\n      />\n    </>\n  );\n}\n"],"names":["Route","createLazyFileRoute","component","Animation","rangeClassname","transitionClassname","createRows","rows","i","push","id","task","complete","Math","min","round","random","priority","issueType","columns","key","name","width","resizable","direction","useDirection","rowHeight","setRowHeight","useState","jsxs","Fragment","children","className","jsx","type","onClick","DataGrid"],"mappings":"8GAQaA,EAAQC,EAAoB,YAAY,EAAE,CACrDC,UAAWC,CACb,CAAC,EAEKC,EAAiB,UAOjBC,EAAsB,UAY5B,SAASC,GAAoB,CAC3B,MAAMC,EAAc,CAAC,EAErB,QAASC,EAAI,EAAGA,EAAI,IAAKA,IACvBD,EAAKE,KAAK,CACRC,GAAIF,EACJG,KAAM,QAAQH,CAAC,GACfI,SAAUC,KAAKC,IAAI,IAAKD,KAAKE,MAAMF,KAAKG,SAAW,GAAG,CAAC,EACvDC,SAAU,CAAC,WAAY,OAAQ,SAAU,KAAK,EAAEJ,KAAKE,MAAMF,KAAKG,OAAO,EAAI,CAAC,CAAC,EAC7EE,UAAW,CAAC,MAAO,cAAe,OAAQ,OAAO,EAAEL,KAAKE,MAAMF,KAAKG,OAAO,EAAI,CAAC,CAAC,CAClF,CAAC,EAGIT,OAAAA,CACT,CAEA,MAAMY,EAAyB,CAC7B,CACEC,IAAK,KACLC,KAAM,KACNC,MAAO,EACT,EACA,CACEF,IAAK,OACLC,KAAM,QACNE,UAAW,EACb,EACA,CACEH,IAAK,WACLC,KAAM,WACNE,UAAW,EACb,EACA,CACEH,IAAK,YACLC,KAAM,aACNE,UAAW,EACb,EACA,CACEH,IAAK,WACLC,KAAM,aACNE,UAAW,EACb,CAAA,EAGIhB,EAAOD,EAAW,EAExB,SAASH,GAAY,CACnB,MAAMqB,EAAYC,EAAa,EACzB,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAS,EAAE,EAE7C,OAEIC,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAA,CAACF,EAAA,KAAA,MAAA,CAAIG,UAAW5B,EAAgB2B,SAAA,CAAA,aAE9BE,EAAA,IAAC,UAAOC,KAAK,SAASC,QAASA,IAAMR,EAAa,EAAE,EAAGI,SAEvD,OAAA,CAAA,EACAE,EAAA,IAAC,UAAOC,KAAK,SAASC,QAASA,IAAMR,EAAa,EAAE,EAAGI,SAEvD,QAAA,CAAA,EACAE,EAAA,IAAC,UAAOC,KAAK,SAASC,QAASA,IAAMR,EAAa,EAAE,EAAGI,SAEvD,OAAA,CAAA,CAAA,CACF,CAAA,EACAE,EAAA,IAACG,EAAA,CACCJ,UAAW,GAAG3B,CAAmB,aACjCc,QAAAA,EACAZ,KAAAA,EACAiB,UAAAA,EACAE,UAAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ"}